package com.example.gamemenu;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Random;
import java.awt.Graphics2D;

public class GameMenu extends JPanel implements ActionListener 
{
    private Timer timer;
    private JButton playButton, settingsButton, RulesButton, exitButton;

    private MusicPlayer music = new MusicPlayer();
    private Random rand = new Random();

    // Tank position
    private int tankX = -100;
    private int tankY = 450;

    // Effects
    private java.util.List<Explosion> explosions = new ArrayList<>();
    private java.util.List<SmokeTrail> smokeTrails = new ArrayList<>();
    private java.util.List<Gunfire> gunfires = new ArrayList<>();
    private ArrayList<Cloud> clouds = new ArrayList<>();

    public GameMenu() 
    {
        setLayout(null);

        // Music
        music.init("res/game_music.wav");

        // Buttons
        playButton = createButton("Play", 300, 180);
        settingsButton = createButton("Settings", 300, 250);
        RulesButton = createButton("Rules", 300, 320);
        exitButton = createButton("Exit", 300, 390);

        add(playButton);
        add(settingsButton);
        add(RulesButton);
        add(exitButton);
        
        //Create some clouds
        for (int a = 0; a < 5; a++)
        {
            clouds.add(new Cloud((int) (Math.random() * 800), (int) (Math.random() * 150)));
        }

        // Animation
        timer = new Timer(30, this);
        timer.start();
    }

    private JButton createButton(String text, int x, int y) 
    {
        JButton button = new JButton(text);
        button.setBounds(x, y, 200, 50);
        button.setFocusPainted(false);
        button.setFont(new Font("Monospaced", Font.BOLD, 20));
        button.addActionListener(e -> handleButtonClick(text));
        return button;
    }

    private void handleButtonClick(String buttonText) 
    {
        ClickSound.play();

        switch (buttonText) 
        {
            case "Play": System.out.println("Play the game!"); break;
            case "Settings": System.out.println("Open settings."); break;
            case "Rules": System.out.println("Show how to play."); break;
            case "Exit": System.exit(0); break;
        }
    }

    @Override
    protected void paintComponent(Graphics g) 
    {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;

        // Sky
        g.setColor(new Color(135, 206, 235)); // Light blue
        g.fillRect(0, 0, getWidth(), getHeight());

        // Ground
        g.setColor(new Color(34, 139, 34)); // Forest green
        g.fillRect(0, getHeight() - 150, getWidth(), 150);

        // Tank
        drawTank(g2d);

        // Title
        drawTitle(g2d);

        // Update & Draw Effects
        updateAndDrawExplosions(g2d);
        updateAndDrawSmoke(g2d);
        updateAndDrawGunfire(g2d);

        // Add new effects randomly
        if (rand.nextInt(20) == 0) explosions.add(new Explosion());
        if (rand.nextInt(10) == 0) smokeTrails.add(new SmokeTrail());
        if (rand.nextInt(6) == 0) gunfires.add(new Gunfire());     
    }

    private void drawTitle(Graphics2D g2d) 
    {
        String title = "IRON VANGUARD";
        Font titleFont = new Font("Monospaced", Font.BOLD, 48);
        g2d.setFont(titleFont);
        g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,
                             RenderingHints.VALUE_TEXT_ANTIALIAS_ON);

        FontMetrics fm = g2d.getFontMetrics(titleFont);
        int titleWidth = fm.stringWidth(title);
        int x = (getWidth() - titleWidth) / 2;
        int y = 100;

        g2d.setColor(Color.DARK_GRAY);
        g2d.drawString(title, x + 3, y + 3);
        g2d.setColor(Color.GREEN.darker());
        g2d.drawString(title, x, y);
    }

    private void drawTank(Graphics2D g) 
    {
        // Tank body
        g.setColor(new Color(60, 80, 60));
        g.fillRect(tankX, tankY, 100, 30);         // Base
        g.fillRect(tankX + 20, tankY - 20, 60, 20); // Turret
        g.fillRect(tankX + 75, tankY - 15, 30, 5);  // Barrel

        // Wheels
        g.setColor(Color.BLACK);
        for (int i = 0; i < 5; i++) 
        {
            g.fillOval(tankX + i * 20, tankY + 25, 15, 15);
        }
    }

    private void updateAndDrawExplosions(Graphics2D g) 
    {
        Iterator<Explosion> it = explosions.iterator();
        
        while (it.hasNext()) 
        {
            Explosion e = it.next();
            e.update();
            e.draw(g);
            if (e.done) it.remove();
        }
    }

    private void updateAndDrawSmoke(Graphics2D g) 
    {
        Iterator<SmokeTrail> it = smokeTrails.iterator();
        
        while (it.hasNext()) 
        {
            SmokeTrail s = it.next();
            s.update();
            s.draw(g);
            if (s.alpha <= 0) it.remove();
        }
    }

    private void updateAndDrawGunfire(Graphics2D g) 
    {
        Iterator<Gunfire> it = gunfires.iterator();
        
        while (it.hasNext()) 
        {
            Gunfire f = it.next();
            f.update();
            f.draw(g);
            if (f.length <= 0) it.remove();
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) 
    {
        // Move tank
        tankX += 2;
        if (tankX > getWidth()) tankX = -120;
        
        // Move clouds
        for (Cloud cloud : clouds) 
        {
            cloud.x -= 1;
            if (cloud.x < -100) cloud.x = getWidth();
        }

        repaint();
    }

    public static void main(String[] args) 
    {
        JFrame frame = new JFrame("Iron Vanguard");
        GameMenu menu = new GameMenu();
        frame.add(menu);
        frame.setSize(800, 600);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setResizable(false);
        frame.setVisible(true);
    }

    // Inner classes for effects
    public class Explosion 
    {
        int x = rand.nextInt(800);
        int y = rand.nextInt(300) + 100;
        int radius = 10;
        int max = 30;
        boolean done = false;

        void update() 
        {
            radius += 2;
            if (radius > max) done = true;
        }

        void draw(Graphics2D g) 
        {
            g.setColor(new Color(255, rand.nextInt(100), 0, 180));
            g.fillOval(x - radius / 2, y - radius / 2, radius, radius);
        }
    }

    public class SmokeTrail 
    {
        int x = rand.nextInt(800);
        int y = rand.nextInt(200) + 250;
        int size = 20;
        int alpha = 200;

        void update() 
        {
            y -= 1;
            alpha -= 4;
        }

        void draw(Graphics2D g) 
        {
            g.setColor(new Color(120, 120, 120, Math.max(0, alpha)));
            g.fillOval(x, y, size, size);
        }
    }

    public class Gunfire 
    {
        int x = rand.nextInt(800);
        int y = rand.nextInt(200) + 150;
        int length = 40;

        void update() 
        {
            length -= 5;
        }

        void draw(Graphics2D g) 
        {
            g.setColor(Color.YELLOW);
            g.drawLine(x, y, x, y - length);
        }
    }
    
    static class Cloud 
    {
        int x, y;

        Cloud(int x, int y) 
        {
            this.x = x;
            this.y = y;
        }
    }
}
